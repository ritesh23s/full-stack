/* Q1.Create the following layout using CSS Grid
- Devide the grid into 12 rows & 12 columns
- Give a gap of 10px between each row and column
- set the sizing of individual boxes as shown in image */

.container{
    margin: 0;
    padding: 0;
    height: 100vh;
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(12, 1fr);
    grid-gap: 10px;
}

.container div{
    background-color: pink;
    font-size: 1.5rem;
}

.header{
    grid-column: 1 / span 12;
}

.sidebar{
    grid-column: 1 / span 3;
    grid-row: 2 / span 10;
}

.navigation{
    grid-column: 4 / span 6;
}

.main{
    grid-column: 4 / span 6;
    grid-row: 3 / span 9;
}

.ads{
    grid-column: 10 / span 3;
    grid-row: 2 / span 10;
}

.footer {
    grid-column: 1 / span 12;
}


/* Q2. Use media queries to change the above layout given one when the viewport width goes below 720px. */

@media (max-width: 720px) {
    
    .header{
        grid-column: 1 / span 12;
    }

    .navigation{
        grid-column: 1 / span 12;
        grid-row: 2 / span 1;
    }

    .sidebar{
        grid-column: 1 / span 3;
        grid-row: 3 / span 9;
    }

    .main{
        grid-column: 4 / span 9;
        grid-row: 3 / span 9;
    }

    .ads{
        grid-row: 12 / span 1;
        grid-column: 1 / span 3;
    }

    .footer{
        grid-column: 4 / span 9;
    }
}